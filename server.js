// server.js
const express = require('express');
const multer = require('multer');
const TelegramBot = require('node-telegram-bot-api');
const cors = require('cors');
require('dotenv').config();
const path = require('path');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN, { polling: false });

const app = express();

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS
app.use(cors({
    origin: 'https://www.neztrix.ru/' // –ó–∞–º–µ–Ω–∏—Ç–µ '*' –Ω–∞ –¥–æ–º–µ–Ω –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
}));

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
const storage = multer.diskStorage({
    destination: function (req, file, cb) {
        cb(null, 'uploads/') // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–∞–ø–∫–∞ "uploads" —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    },
    filename: function (req, file, cb) {
        const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9)
        cb(null, uniqueSuffix + path.extname(file.originalname))
    }
});

const upload = multer({ storage: storage });

// –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ uploads, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
const fs = require('fs');
const uploadsDir = path.join(__dirname, 'uploads');
if (!fs.existsSync(uploadsDir)){
    fs.mkdirSync(uploadsDir);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è HTML
const escapeHtml = (unsafe) => {
    return unsafe
        .replace(/&/g, "&amp;")
        .replace(/</g, "&lt;")
        .replace(/>/g, "&gt;")
        .replace(/"/g, "&quot;")
        .replace(/'/g, "&#039;");
};

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ä–º—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
app.post('/api/contact', upload.single('file'), async (req, res) => {
    const { name, telegram, budget, phone, message, hasTz } = req.body;
    const file = req.file;

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    if (!name || !telegram || !budget || !phone || !message) {
        return res.status(400).send('–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã.');
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–ª–∏–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è
    if (message.trim().length < 15) {
        return res.status(400).send('–°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 15 —Å–∏–º–≤–æ–ª–æ–≤.');
    }

    // –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –≤–≤–æ–¥–æ–≤
    const safeName = escapeHtml(name);
    const safeTelegram = escapeHtml(telegram);
    const safeBudget = escapeHtml(budget);
    const safePhone = escapeHtml(phone);
    const safeMessage = escapeHtml(message);
    const safeHasTz = (hasTz === 'yes') ? '–î–∞' : '–ù–µ—Ç';

    // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    let msg = `üì© <b>–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞</b>\n\n`;
    msg += `<b>–ò–º—è:</b> ${safeName}\n`;
    msg += `<b>Username –≤ Telegram:</b> @${safeTelegram}\n`;
    msg += `<b>–ë—é–¥–∂–µ—Ç:</b> ${safeBudget}\n`;
    msg += `<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> ${safePhone}\n`;
    msg += `<b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b> ${safeMessage}\n`;
    msg += `<b>–ï—Å—Ç—å –¢–ó:</b> ${safeHasTz}`;

    try {
        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        await bot.sendMessage(process.env.TELEGRAM_CHAT_ID, msg, { parse_mode: 'HTML' });

        // –ï—Å–ª–∏ —Ñ–∞–π–ª –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω –∏ –µ—Å—Ç—å –¢–ó, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
        if (file && hasTz === 'yes') {
            const filePath = path.join(__dirname, file.path);
            await bot.sendDocument(process.env.TELEGRAM_CHAT_ID, filePath, {}, { filename: file.originalname });
            // –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
            fs.unlinkSync(filePath);
        }

        res.status(200).send('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
        res.status(500).send('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è');
    }
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
